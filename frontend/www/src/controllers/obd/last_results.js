// Generated by CoffeeScript 1.6.3
(function() {
  angular.module('carPc').controller('ObdLastResultsCtrl', function($scope, $ionicLoading, $ionicPopup, $timeout, $cookieStore, httpHelper, obd) {
    var loadResults;
    $scope.sensorResults = void 0;
    $scope.shouldShowReorder = false;
    $scope.showHidden = false;
    if ($cookieStore.get('ObdLastResultsCtrl.autoRefresh') === void 0) {
      $scope.autoRefresh = true;
    } else {
      $scope.autoRefresh = $cookieStore.get('ObdLastResultsCtrl.autoRefresh');
    }
    loadResults = function() {
      if ($scope.sensorResults === void 0) {
        $ionicLoading.show({
          template: 'Loading...'
        });
      }
      return obd.getLastResults().then(function(results) {
        var haveNewIndexes, hiddenSensors, result, sensorIndex, sensorsOrder, _i, _len;
        $ionicLoading.hide();
        hiddenSensors = $cookieStore.get('ObdLastResultsCtrl.hiddenSensors') || {};
        sensorsOrder = $cookieStore.get('ObdLastResultsCtrl.sensorsOrder') || [];
        haveNewIndexes = false;
        for (_i = 0, _len = results.length; _i < _len; _i++) {
          result = results[_i];
          if (hiddenSensors[result.pid]) {
            result.isHidden = true;
          } else {
            result.isHidden = false;
          }
          sensorIndex = sensorsOrder.indexOf(result.pid);
          if (sensorIndex === -1) {
            sensorsOrder.push(result.pid);
            sensorIndex = sensorsOrder.indexOf(result.pid);
            haveNewIndexes = true;
          }
          result.index = sensorIndex;
        }
        if (haveNewIndexes) {
          $cookieStore.put('ObdLastResultsCtrl.sensorsOrder', sensorsOrder);
        }
        $scope.sensorResults = results;
        if ($scope.autoRefresh) {
          return $timeout(loadResults, 1000);
        }
      }, function(response) {
        $ionicLoading.hide();
        return httpHelper.loadFailAlert(response);
      });
    };
    loadResults();
    $scope.reorderSensors = function(pid, fromIndex, toIndex) {
      var sensorsOrder;
      sensorsOrder = $cookieStore.get('ObdLastResultsCtrl.sensorsOrder');
      pid = sensorsOrder.splice(fromIndex, 1)[0];
      sensorsOrder.splice(toIndex, 0, pid);
      return $cookieStore.put('ObdLastResultsCtrl.sensorsOrder', sensorsOrder);
    };
    $scope.hideSensor = function(result) {
      var hiddenSensors;
      result.isHidden = true;
      hiddenSensors = $cookieStore.get('ObdLastResultsCtrl.hiddenSensors') || {};
      hiddenSensors[result.pid] = 1;
      return $cookieStore.put('ObdLastResultsCtrl.hiddenSensors', hiddenSensors);
    };
    $scope.showSensor = function(result) {
      var hiddenSensors;
      result.isHidden = false;
      hiddenSensors = $cookieStore.get('ObdLastResultsCtrl.hiddenSensors') || {};
      if (hiddenSensors[result.pid]) {
        delete hiddenSensors[result.pid];
        return $cookieStore.put('ObdLastResultsCtrl.hiddenSensors', hiddenSensors);
      }
    };
    return $scope.$watch('autoRefresh', function() {
      $cookieStore.put('ObdLastResultsCtrl.autoRefresh', $scope.autoRefresh);
      if ($scope.autoRefresh) {
        return loadResults();
      }
    });
  });

}).call(this);
