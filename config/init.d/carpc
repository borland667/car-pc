#! /bin/sh
### BEGIN INIT INFO
# Provides:          FastCGI servers for Django
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: Start FastCGI servers with Django for Ustart UI.
# Description:       Django, in order to operate with FastCGI, must be started
#                    in a very specific way with manage.py. This must be done
#                    for each Django web server that has to run.
### END INIT INFO
#
# Author:  dyus@soft-way.biz.
#

set -e

#### CONFIGURATION (override in /etc/default/ustart_ui)

# django project names/directories
PROJECT_DIR=/opt/carpc/

# path to the directory conrtaining all site-specific virtualenvs
# (see http://pypi.python.org/pypi/virtualenv for more information)
ENVIRONMENT_PATH=$PROJECT_DIR/backend/virt_env

# path to the directory for socket and pid files
PID_PATH=/tmp/carpc.pid

# please make sure this is NOT root
# local user prefered, www-data accepted
RUN_AS=carpc

# maximum requests before fast-cgi process respawns
# (a.k.a. get killed and let live)
MAXREQUESTS=1000

#### END CONFIGURATION

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="CARPC START"
NAME=$0
SCRIPTNAME=/etc/init.d/$NAME
if [ -f $PID_PATH ] ; then
    chown -R $RUN_AS:$RUN_AS $PID_PATH
fi

#
#       Function that starts the daemon/service.
#
d_start()
{
    # find python binary to use
    if [ -f $SANDBOX/bin/python ]; then
       PYTHON=$SANDBOX/bin/python
    elif [ -f $ENVIRONMENT_PATH/bin/python ]; then
       PYTHON=$ENVIRONMENT_PATH/bin/python
    else
       PYTHON=`which python`
    fi

    if [ -f $PID_PATH ]; then
        echo -n " already running"
    else
        cd $PROJECT_DIR/backend
        sudo -u $RUN_AS $PYTHON $PROJECT_DIR/backend/manage.py supervisor -d
        sudo -u $RUN_AS $PYTHON $PROJECT_DIR/backend/manage.py supervisor start all
    fi
}

#
#       Function that stops the daemon/service.
#
d_stop() {
    # find python binary to use
    if [ -f $SANDBOX/bin/python ]; then
       PYTHON=$SANDBOX/bin/python
    elif [ -f $ENVIRONMENT_PATH/bin/python ]; then
       PYTHON=$ENVIRONMENT_PATH/bin/python
    else
       PYTHON=`which python`
    fi

    cd $PROJECT_DIR/backend
    sudo -u $RUN_AS $PYTHON $PROJECT_DIR/backend/manage.py supervisor stop all
    sudo -u $RUN_AS $PYTHON $PROJECT_DIR/backend/manage.py supervisor shutdown
}

ACTION="$1"
case "$ACTION" in
    start)
        echo -n "Starting $DESC:"
        d_start
        echo "."
        ;;

    stop)
        echo -n "Stopping $DESC:"
        d_stop
        echo "."
        ;;

    status)
        # find python binary to use
        if [ -f $SANDBOX/bin/python ]; then
           PYTHON=$SANDBOX/bin/python
        elif [ -f $ENVIRONMENT_PATH/bin/python ]; then
           PYTHON=$ENVIRONMENT_PATH/bin/python
        else
           PYTHON=`which python`
        fi

        sudo -u $RUN_AS $PYTHON $PROJECT_DIR/backend/manage.py supervisor status
        ;;

    restart|force-reload)
        echo -n "Restarting $DESC: $NAME"
        d_stop
        sleep 15
        d_start
        echo "."
        ;;

    *)
        echo "Usage: $NAME {start|stop|restart|force-reload|status} [site]" >&2
        exit 3
        ;;
esac

exit 0